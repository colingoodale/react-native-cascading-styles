{"ast":null,"code":"import React from 'react';\nimport Button from '../../package/src/components/Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst buttonStyleMock = {\n  backgroundColor: 'white',\n  padding: 10\n};\nconst TextStyleMock = {\n  color: 'black',\n  fontSize: 20\n};\ndescribe(\"Button Component\", () => {\n  it(\"Should render with the given label\", () => {\n    cy.mount(_jsx(Button, {\n      label: \"Press Me\",\n      onPress: () => {},\n      buttonStyle: [ButtonStyleMock],\n      textStyle: [TextStyleMock]\n    }));\n    cy.get('[data-testid=\"default\"]').should(\"contain.text\", \"Press Me\");\n  });\n  it(\"Should call onPress when clicked\", () => {\n    const handlePress = cy.spy();\n    cy.mount(_jsx(Button, {\n      label: \"Press Me\",\n      testId: \"simple-button\",\n      onPress: handlePress,\n      buttonStyle: [ButtonStyleMock],\n      textStyle: [TextStyleMock]\n    }));\n    cy.get('[data-testid=\"simple-button\"]').click();\n    cy.wrap(handlePress).should(\"have.been.calledOnce\");\n  });\n  it(\"Should render with the default testId\", () => {\n    cy.mount(_jsx(Button, {\n      label: \"Press Me\",\n      onPress: () => {},\n      buttonStyle: [ButtonStyleMock],\n      textStyle: [TextStyleMock]\n    }));\n    cy.get('[data-testid=\"default\"]').should(\"contain.text\", \"Press Me\");\n  });\n});","map":{"version":3,"names":["React","Button","jsx","_jsx","buttonStyleMock","backgroundColor","padding","TextStyleMock","color","fontSize","describe","it","cy","mount","label","onPress","buttonStyle","ButtonStyleMock","textStyle","get","should","handlePress","spy","testId","click","wrap"],"sources":["C:/Users/colin/Desktop/react-native-cascading-styles/cypress/component/Button.cy.tsx"],"sourcesContent":["import React from 'react';\r\nimport Button from '../../package/src/components/Button'\r\n\r\nconst buttonStyleMock = {\r\n    backgroundColor: 'white',\r\n    padding: 10\r\n}\r\n\r\nconst TextStyleMock = {\r\n    color: 'black',\r\n    fontSize: 20\r\n}\r\n\r\ndescribe(\"Button Component\", () => {\r\n    it(\"Should render with the given label\", () => {\r\n      cy.mount(\r\n        <Button\r\n          label=\"Press Me\"\r\n          onPress={() => {}}\r\n          buttonStyle={[ButtonStyleMock]}\r\n          textStyle={[TextStyleMock]}\r\n        />,\r\n      );\r\n      cy.get('[data-testid=\"default\"]').should(\"contain.text\", \"Press Me\");\r\n    });\r\n  \r\n    it(\"Should call onPress when clicked\", () => {\r\n      const handlePress = cy.spy();\r\n  \r\n      cy.mount(\r\n        <Button\r\n          label=\"Press Me\"\r\n          testId={\"simple-button\"}\r\n          onPress={handlePress}\r\n          buttonStyle={[ButtonStyleMock]}\r\n          textStyle={[TextStyleMock]}\r\n        />,\r\n      );\r\n  \r\n      cy.get('[data-testid=\"simple-button\"]').click();\r\n  \r\n      cy.wrap(handlePress).should(\"have.been.calledOnce\");\r\n    });\r\n  \r\n    it(\"Should render with the default testId\", () => {\r\n      cy.mount(\r\n        <Button\r\n          label=\"Press Me\"\r\n          onPress={() => {}}\r\n          buttonStyle={[ButtonStyleMock]}\r\n          textStyle={[TextStyleMock]}\r\n        />,\r\n      );\r\n      cy.get('[data-testid=\"default\"]').should(\"contain.text\", \"Press Me\");\r\n    });\r\n  });"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,qCAAqC;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAExD,MAAMC,eAAe,GAAG;EACpBC,eAAe,EAAE,OAAO;EACxBC,OAAO,EAAE;AACb,CAAC;AAED,MAAMC,aAAa,GAAG;EAClBC,KAAK,EAAE,OAAO;EACdC,QAAQ,EAAE;AACd,CAAC;AAEDC,QAAQ,CAAC,kBAAkB,EAAE,MAAM;EAC/BC,EAAE,CAAC,oCAAoC,EAAE,MAAM;IAC7CC,EAAE,CAACC,KAAK,CACNV,IAAA,CAACF,MAAM;MACLa,KAAK,EAAC,UAAU;MAChBC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;MAClBC,WAAW,EAAE,CAACC,eAAe,CAAE;MAC/BC,SAAS,EAAE,CAACX,aAAa;IAAE,CAC5B,CACH,CAAC;IACDK,EAAE,CAACO,GAAG,CAAC,yBAAyB,CAAC,CAACC,MAAM,CAAC,cAAc,EAAE,UAAU,CAAC;EACtE,CAAC,CAAC;EAEFT,EAAE,CAAC,kCAAkC,EAAE,MAAM;IAC3C,MAAMU,WAAW,GAAGT,EAAE,CAACU,GAAG,CAAC,CAAC;IAE5BV,EAAE,CAACC,KAAK,CACNV,IAAA,CAACF,MAAM;MACLa,KAAK,EAAC,UAAU;MAChBS,MAAM,EAAE,eAAgB;MACxBR,OAAO,EAAEM,WAAY;MACrBL,WAAW,EAAE,CAACC,eAAe,CAAE;MAC/BC,SAAS,EAAE,CAACX,aAAa;IAAE,CAC5B,CACH,CAAC;IAEDK,EAAE,CAACO,GAAG,CAAC,+BAA+B,CAAC,CAACK,KAAK,CAAC,CAAC;IAE/CZ,EAAE,CAACa,IAAI,CAACJ,WAAW,CAAC,CAACD,MAAM,CAAC,sBAAsB,CAAC;EACrD,CAAC,CAAC;EAEFT,EAAE,CAAC,uCAAuC,EAAE,MAAM;IAChDC,EAAE,CAACC,KAAK,CACNV,IAAA,CAACF,MAAM;MACLa,KAAK,EAAC,UAAU;MAChBC,OAAO,EAAEA,CAAA,KAAM,CAAC,CAAE;MAClBC,WAAW,EAAE,CAACC,eAAe,CAAE;MAC/BC,SAAS,EAAE,CAACX,aAAa;IAAE,CAC5B,CACH,CAAC;IACDK,EAAE,CAACO,GAAG,CAAC,yBAAyB,CAAC,CAACC,MAAM,CAAC,cAAc,EAAE,UAAU,CAAC;EACtE,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
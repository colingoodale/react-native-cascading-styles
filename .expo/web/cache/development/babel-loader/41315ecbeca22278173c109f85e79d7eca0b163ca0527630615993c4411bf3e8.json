{"ast":null,"code":"","map":{"version":3,"names":[],"sources":["C:/Users/colin/Desktop/react-native-cascading-styles/cypress/support/commands.ts"],"sourcesContent":["/// <reference types=\"cypress\" />\r\n// ***********************************************\r\n// This example commands.ts shows you how to\r\n// create various custom commands and overwrite\r\n// existing commands.\r\n//\r\n// For more comprehensive examples of custom\r\n// commands please read more here:\r\n// https://on.cypress.io/custom-commands\r\n// ***********************************************\r\n//\r\n//\r\n// -- This is a parent command --\r\n// Cypress.Commands.add('login', (email, password) => { ... })\r\n//\r\n//\r\n// -- This is a child command --\r\n// Cypress.Commands.add('drag', { prevSubject: 'element'}, (subject, options) => { ... })\r\n//\r\n//\r\n// -- This is a dual command --\r\n// Cypress.Commands.add('dismiss', { prevSubject: 'optional'}, (subject, options) => { ... })\r\n//\r\n//\r\n// -- This will overwrite an existing command --\r\n// Cypress.Commands.overwrite('visit', (originalFn, url, options) => { ... })\r\n//\r\n// declare global {\r\n//   namespace Cypress {\r\n//     interface Chainable {\r\n//       login(email: string, password: string): Chainable<void>\r\n//       drag(subject: string, options?: Partial<TypeOptions>): Chainable<Element>\r\n//       dismiss(subject: string, options?: Partial<TypeOptions>): Chainable<Element>\r\n//       visit(originalFn: CommandOriginalFn, url: string, options: Partial<VisitOptions>): Chainable<Element>\r\n//     }\r\n//   }\r\n// }"],"mappings":"","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
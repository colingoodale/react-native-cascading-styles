{"ast":null,"code":"import React from \"react\";\nimport TextInput from \"../../package/src/components/TextInput\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst TextInputStyleMock = {\n  padding: 10,\n  borderWidth: 1,\n  borderRadius: 5,\n  borderColor: \"gray\",\n  backgroundColor: \"white\"\n};\ndescribe(\"TextInput Component\", () => {\n  it(\"Should render with the given placeholder\", () => {\n    cy.mount(_jsx(TextInput, {\n      placeholder: \"Type here\",\n      style: [TextInputStyleMock]\n    }));\n    cy.get('[data-testid=\"default\"]').should(\"have.attr\", \"placeholder\", \"Type here\");\n  });\n  it(\"Should render with the default testId\", () => {\n    cy.mount(_jsx(TextInput, {\n      placeholder: \"Type here\",\n      style: [TextInputStyleMock]\n    }));\n    cy.get('[data-testid=\"default\"]').should(\"have.attr\", \"placeholder\", \"Type here\");\n  });\n  it(\"Should have the value typed into it after typing\", () => {\n    cy.mount(_jsx(TextInput, {\n      placeholder: \"Type here\",\n      style: [TextInputStyleMock]\n    }));\n    cy.get('[data-testid=\"default\"]').type(\"Hello World\");\n    cy.get('[data-testid=\"default\"]').should(\"have.value\", \"Hello World\");\n  });\n});","map":{"version":3,"names":["React","TextInput","jsx","_jsx","TextInputStyleMock","padding","borderWidth","borderRadius","borderColor","backgroundColor","describe","it","cy","mount","placeholder","style","get","should","type"],"sources":["C:/Users/colin/Desktop/react-native-cascading-styles/cypress/component/TextInput.cy.tsx"],"sourcesContent":["import React from \"react\";\r\nimport TextInput from \"../../package/src/components/TextInput\";\r\n\r\nconst TextInputStyleMock = {\r\n  padding: 10,\r\n  borderWidth: 1,\r\n  borderRadius: 5,\r\n  borderColor: \"gray\",\r\n  backgroundColor: \"white\",\r\n};\r\n\r\ndescribe(\"TextInput Component\", () => {\r\n  it(\"Should render with the given placeholder\", () => {\r\n    cy.mount(\r\n      <TextInput placeholder=\"Type here\" style={[TextInputStyleMock]} />,\r\n    );\r\n    cy.get('[data-testid=\"default\"]').should(\r\n      \"have.attr\",\r\n      \"placeholder\",\r\n      \"Type here\",\r\n    );\r\n  });\r\n\r\n  it(\"Should render with the default testId\", () => {\r\n    cy.mount(\r\n      <TextInput placeholder=\"Type here\" style={[TextInputStyleMock]} />,\r\n    );\r\n    cy.get('[data-testid=\"default\"]').should(\r\n      \"have.attr\",\r\n      \"placeholder\",\r\n      \"Type here\",\r\n    );\r\n  });\r\n\r\n  it(\"Should have the value typed into it after typing\", () => {\r\n    cy.mount(\r\n      <TextInput placeholder=\"Type here\" style={[TextInputStyleMock]} />,\r\n    );\r\n    cy.get('[data-testid=\"default\"]').type(\"Hello World\");\r\n    cy.get('[data-testid=\"default\"]').should(\"have.value\", \"Hello World\");\r\n  });\r\n});\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,SAAS,MAAM,wCAAwC;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAE/D,MAAMC,kBAAkB,GAAG;EACzBC,OAAO,EAAE,EAAE;EACXC,WAAW,EAAE,CAAC;EACdC,YAAY,EAAE,CAAC;EACfC,WAAW,EAAE,MAAM;EACnBC,eAAe,EAAE;AACnB,CAAC;AAEDC,QAAQ,CAAC,qBAAqB,EAAE,MAAM;EACpCC,EAAE,CAAC,0CAA0C,EAAE,MAAM;IACnDC,EAAE,CAACC,KAAK,CACNV,IAAA,CAACF,SAAS;MAACa,WAAW,EAAC,WAAW;MAACC,KAAK,EAAE,CAACX,kBAAkB;IAAE,CAAE,CACnE,CAAC;IACDQ,EAAE,CAACI,GAAG,CAAC,yBAAyB,CAAC,CAACC,MAAM,CACtC,WAAW,EACX,aAAa,EACb,WACF,CAAC;EACH,CAAC,CAAC;EAEFN,EAAE,CAAC,uCAAuC,EAAE,MAAM;IAChDC,EAAE,CAACC,KAAK,CACNV,IAAA,CAACF,SAAS;MAACa,WAAW,EAAC,WAAW;MAACC,KAAK,EAAE,CAACX,kBAAkB;IAAE,CAAE,CACnE,CAAC;IACDQ,EAAE,CAACI,GAAG,CAAC,yBAAyB,CAAC,CAACC,MAAM,CACtC,WAAW,EACX,aAAa,EACb,WACF,CAAC;EACH,CAAC,CAAC;EAEFN,EAAE,CAAC,kDAAkD,EAAE,MAAM;IAC3DC,EAAE,CAACC,KAAK,CACNV,IAAA,CAACF,SAAS;MAACa,WAAW,EAAC,WAAW;MAACC,KAAK,EAAE,CAACX,kBAAkB;IAAE,CAAE,CACnE,CAAC;IACDQ,EAAE,CAACI,GAAG,CAAC,yBAAyB,CAAC,CAACE,IAAI,CAAC,aAAa,CAAC;IACrDN,EAAE,CAACI,GAAG,CAAC,yBAAyB,CAAC,CAACC,MAAM,CAAC,YAAY,EAAE,aAAa,CAAC;EACvE,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}